{
  "name": "nvrstl",
  "private": true,
  "npmConfig": {
    "legacy-peer-deps": true
  },
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "build:production": "ESLINT_CONFIG_FILE=eslint.config.production.js NEXT_CONFIG_FILE=next.config.production.mjs next build",
    "build:prod-quick": "ESLINT_NO_DEV_ERRORS=true NEXT_CONFIG_FILE=next.config.production.mjs next build",
    "start": "next start",
    "lint": "next lint",
    "prisma:generate": "prisma generate",
    "prisma:studio:local": "dotenv -e .env.local -- prisma studio",
    "prisma:studio:production": "dotenv -e .env.production -- prisma studio",
    "prisma:seed": "tsx prisma/seed.ts",
    "prisma:seed:random": "ts-node --compiler-options '{\"module\":\"CommonJS\"}' prisma/seed-random.ts",
    "prisma:migrate:dev": "dotenv -e .env.local -- prisma migrate dev",
    "prisma:migrate:deploy": "prisma migrate deploy",
    "prisma:migrate:reset": "dotenv -e .env.local -- prisma migrate reset",
    "prisma:db:push": "dotenv -e .env.local -- prisma db push",
    "diagnose:schema": "ts-node --compiler-options '{\"module\":\"CommonJS\"}' scripts/diagnose-schema.ts",
    "postinstall": "prisma generate",
    "deploy:setup": "prisma migrate deploy && prisma generate",
    "test": "NODE_ENV=test jest",
    "test:serial": "NODE_ENV=test JEST_SERIAL=1 jest",
    "test:coverage": "NODE_ENV=test jest --coverage",
    "test:db": "echo 'Database tests covered in main test suite' && NODE_ENV=test jest --testPathPatterns=tests/integration",
    "test:e2e": "NODE_ENV=test jest --testPathPatterns=e2e --passWithNoTests",
    "test:ci": "NODE_ENV=test jest --ci --coverage --watchAll=false --passWithNoTests",
    "env:validate": "npx tsx scripts/validate-environment.ts",
    "env:validate:production": "NODE_ENV=production npx tsx scripts/validate-environment.ts",
    "shipping:seed": "npx tsx seed-production-shipments.ts",
    "db:optimize": "npx tsx scripts/optimize-database.ts",
    "cache:warm": "npx tsx scripts/warm-cache.ts",
    "performance:analyze": "npx tsx scripts/optimize-database.ts --analyze-only",
    "performance:full": "npm run db:optimize && npm run cache:warm",
    "production:setup": "npm run env:validate:production && npm run deploy:setup && npm run shipping:seed && npm run performance:full",
    "migrate:production": "npx tsx scripts/migrate-production.ts",
    "baseline:production": "npx tsx scripts/baseline-production.ts",
    "production:configure": "node scripts/configure-production.js",
    "production:validate": "node scripts/validate-deployment.js",
    "production:deploy": "./scripts/deploy-production.sh",
    "production:full": "npm run production:configure && npm run production:validate && npm run production:deploy",
    "deployment:readiness": "npx tsx scripts/deployment-readiness.ts",
    "db:check:notification": "dotenv -e .env.local -- npx tsx scripts/check-notification.ts",
    "db:test:notification": "dotenv -e .env.local -- npx tsx scripts/quick-notification-test.ts",
    "report:shipping:today": "dotenv -e .env.local -- npx tsx scripts/run-daily-shipping-report.ts",
    "report:shipping:date": "dotenv -e .env.local -- npx tsx scripts/run-daily-shipping-report.ts",
    "report:shipping:prod:today": "dotenv -e .env.production -- npx tsx scripts/run-daily-shipping-report.ts",
    "report:shipping:prod:date": "dotenv -e .env.production -- npx tsx scripts/run-daily-shipping-report.ts",
    "report:export:today": "dotenv -e .env.local -- npx tsx scripts/export-daily-shipping-report.ts",
    "report:export:date": "dotenv -e .env.local -- npx tsx scripts/export-daily-shipping-report.ts",
    "report:export:prod:today": "dotenv -e .env.production -- npx tsx scripts/export-daily-shipping-report.ts",
    "report:export:prod:date": "dotenv -e .env.production -- npx tsx scripts/export-daily-shipping-report.ts",
    "seed:test": "dotenv -e .env.local -- npx tsx scripts/seed-test-data.ts",
    "health:check": "curl -f http://localhost:3000/api/health || echo 'Health check failed'",
    "health:database": "curl -f http://localhost:3000/api/health/database || echo 'Database health check failed'",
    "health:redis": "curl -f http://localhost:3000/api/health/redis || echo 'Redis health check failed'",
    "load-test": "npx tsx load-testing/run-load-tests.ts",
    "load-test:database": "npx tsx load-testing/test-database.ts",
    "load-test:monitor": "npx tsx load-testing/monitor-system.ts",
    "load-test:quick": "npx tsx load-testing/run-load-tests.ts --duration 2m --users 20,10,5",
    "load-test:stress": "npx tsx load-testing/run-load-tests.ts --duration 10m --users 100,50,20",
    "docs:audit": "npx tsx scripts/scan-docs-placeholders.ts"
  },
  "dependencies": {
    "@prisma/client": "^6.17.1",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-select": "^2.2.6",
    "@sentry/nextjs": "^10.22.0",
    "@stripe/react-stripe-js": "^5.3.0",
    "@stripe/stripe-js": "^8.2.0",
    "@tanstack/react-query": "^5.51.0",
    "@types/bcryptjs": "^3.0.0",
    "@types/nodemailer": "^7.0.3",
    "@types/qrcode": "^1.5.6",
    "@types/speakeasy": "^2.0.10",
    "bcryptjs": "^3.0.2",
    "clsx": "^2.1.1",
    "glob": "^11.0.3",
    "ioredis": "^5.8.2",
    "lucide-react": "^0.548.0",
    "mailersend": "^2.6.0",
    "next": "14.2.33",
    "next-auth": "^4.24.11",
    "nodemailer": "^7.0.10",
    "qrcode": "^1.5.4",
    "qrcode.react": "^4.2.0",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-hot-toast": "^2.6.0",
    "react-is": "^19.2.0",
    "recharts": "^3.2.1",
    "resend": "^6.1.2",
    "speakeasy": "^2.0.0",
    "stripe": "^19.1.0",
    "tailwind-merge": "^2.3.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.11.30",
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.3.7",
    "@typescript-eslint/eslint-plugin": "^8.46.2",
    "@typescript-eslint/parser": "^8.46.2",
    "artillery": "^2.0.26",
    "autoprefixer": "^10.4.16",
    "dotenv-cli": "^10.0.0",
    "eslint": "^8.57.1",
    "eslint-config-next": "16.0.0",
    "jest": "^30.1.3",
    "jest-environment-jsdom": "^30.2.0",
    "postcss": "^8.4.31",
    "prisma": "^6.18.0",
    "tailwindcss": "^3.4.3",
    "ts-jest": "^29.4.4",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.6",
    "typescript": "^5.4.0"
  }
}
